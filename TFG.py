import yara 
from Tkinter import *
from Tkinter import Tk, Label, BOTH
from tkMessageBox import *
from ttk import Frame, Button, Style
from PIL import Image, ImageTk
from tkFileDialog import askopenfilename
import glob 
import os

# Definimos la clase DetectionScript 
class DetectionScript:
# Definimos el metodo inicial donde se crean los botones

  def __init__(self, master):
    
    frame = Frame(master)
    Frame.__init__(frame)
    frame.pack() 
    master.title(" YARA Rules Scanner")
  
    
    self.button = Button(frame, 
                         text="QUIT",
                         command=quit)
    self.button.pack(side=LEFT, expand ="yes")
    self.slogan = Button(frame,
                         text="SCAN",
                         command=self.scan_yara)
    self.slogan.pack(side=LEFT,  expand ="yes")

# Definimos la funcion que se ejecuta al pulsar el boton SCAN

  def scan_yara(self):
  filename = askopenfilename()
     if filename == "":
    print("No se ha elegido archivo")
  ruleList = glob.glob('/home/rdor/Desktop/Reglas/*.yar')
  matchedRule = []
        numMatches = 0 
  for f in ruleList:

    compiledRule= yara.compile(f)
     matchedRule = compiledRule.match(filename)

    if matchedRule != []:  

      indexes = ruleList.index(f)
      positives = []
      for i in matchedRule:
        print(matchedRule)
        print(i.rule)
        index2 = matchedRule.index(i)
        positives.append(matchedRule[index2])
      
      printPositive = ','.join(str(x) for x in positives)
      print(printPositive)
      showwarning('Positivo','El archivo '+ filename + ' cumple la/s siguiente/s regla/s Yara: ' + ','.join(str(x) for x in positives))
      numMatches += 1
      
  if (numMatches == 0):
    print("Prueba negativa")
    showinfo('Negativo', 'El archivo '+ filename + ' no cumple ninguna regla YARA poseida')    

#Interfaz y foto
root = Tk()
root.geometry("600x600+300+300")
backgroundFile = Image.open("/home/rdor/Downloads/fondo.png")
backgroundImage= ImageTk.PhotoImage(backgroundFile)
panel = Label(root, image=backgroundImage)
panel.pack(side = "bottom", fill = "both", expand="yes")
app = DetectionScript(root)
root.mainloop()